#include <GL/glut.h>
#include <math.h>
#include <windows.h>
#include <GL/gl.h>
#include <GL/glut.h>



const int steps=360;
//const float angle=3.1416*2/steps;

void init()
{
glClearColor(0,0,0,1);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0.0, 2.0, 0.0, 2.0, -10.0, 10.0);
}
void display()
{
float theta;
//float lastX =0, lastY=0;
float radius=0.5;

glClear(GL_COLOR_BUFFER_BIT);
glColor3f(0,1,0);
glBegin(GL_POLYGON);
for(int i=0;i<steps;i++)
{

    theta=i*3.1416/180;
    glVertex2f(0.5+radius*sin(theta),0.5-radius*cos(theta));
}
glEnd();
/*
glBegin(GL_TRIANGLES);
for (int i=0; i<=steps;i++)
{
    float newX= radius*sin(angle*i);
    float newY= -radius*cos(angle*i);

    glVertex3f(0.0f,0.0f,0.0f);  //center
    glColor3f(0,1,1);
    glVertex3f(lastX, lastY, 0.f);
    glColor3f(0,1,0);
    glVertex3f(newX, newY, 0.f);
    lastX=newX;
    lastY=newY;

}
 glEnd();
*/
glFlush();
}

int main(int argc,char ** argv)
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowPosition(0,0);
    glutInitWindowSize(500,500);
    glutCreateWindow("Circle");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
}
